{
  "compilerOptions": {
    // - For Vite, the actual compilation target is determined by the
    //   `build.target` option in the Vite config.
    //   So don't change the `target` field here. It has to be
    //   at least `ES2020` for dynamic `import()`s and `import.meta` to work correctly.
    "target": "ESNext",
    "module": "ESNext",
    // https://blog.csdn.net/weixin_40013817/article/details/127200965
    "moduleResolution": "Node",
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    // IMPORTANT!! It will change the behavior while defining class fields
    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#the-usedefineforclassfields-flag-and-the-declare-property-modifier
    "useDefineForClassFields": true,
    // Enforce using `import type` instead of `import` for types
    // "importsNotUsedAsValues": "error",
    // Required in Vite
    "isolatedModules": true,
    // Used when the module **does not** explicitly specify a default export.
    // Allow `import x from y` instead of `import * as x from y`
    "allowSyntheticDefaultImports": true,
    // Drop type imports but preserve value imports for possible side effects.
    "verbatimModuleSyntax": true,
    // Standardize namespace import and default import for CommonJS
    "esModuleInterop": true,
    "jsx": "react-jsx",
    "lib": [
      "ES2017",
      "DOM",
      "DOM.Iterable"
      // No `ScriptHost`, dropped support for IE
    ],
    "forceConsistentCasingInFileNames": true,
    // See <https://github.com/vuejs/vue-cli/pull/5688>
    "skipLibCheck": true,
    "noEmit": true
  }
}
